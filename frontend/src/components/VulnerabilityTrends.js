import React, { useState, useEffect } from 'react';
import { Line } from 'react-chartjs-2';
import { TrendingUp, RefreshCw } from 'lucide-react';
import axios from 'axios';
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend,
} from 'chart.js';

ChartJS.register(
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend
);

function VulnerabilityTrends() {
  const [trendsData, setTrendsData] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchTrends();
  }, []);

  const fetchTrends = async () => {
    setLoading(true);
    try {
      const response = await axios.get('/api/trends');
      setTrendsData(response.data.trends);
    } catch (error) {
      console.error('Error fetching trends:', error);
    } finally {
      setLoading(false);
    }
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString('en-US', { 
      month: 'short', 
      day: 'numeric' 
    });
  };

  const chartData = {
    labels: trendsData.map(item => formatDate(item.scan_time)),
    datasets: [
      {
        label: 'High Severity',
        data: trendsData.map(item => item.high),
        borderColor: '#dc2626',
        backgroundColor: 'rgba(220, 38, 38, 0.1)',
        tension: 0.4,
      },
      {
        label: 'Medium Severity',
        data: trendsData.map(item => item.medium),
        borderColor: '#ea580c',
        backgroundColor: 'rgba(234, 88, 12, 0.1)',
        tension: 0.4,
      },
      {
        label: 'Low Severity',
        data: trendsData.map(item => item.low),
        borderColor: '#16a34a',
        backgroundColor: 'rgba(22, 163, 74, 0.1)',
        tension: 0.4,
      }
    ],
  };

  const chartOptions = {
    responsive: true,
    plugins: {
      legend: {
        position: 'top',
      },
      title: {
        display: true,
        text: 'Vulnerability Trends Over Time',
      },
    },
    scales: {
      y: {
        beginAtZero: true,
        ticks: {
          stepSize: 1,
        },
      },
    },
  };

  return (
    <div className="card">
      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '24px' }}>
        <h2 style={{ fontSize: '24px', fontWeight: 'bold', display: 'flex', alignItems: 'center', gap: '8px' }}>
          <TrendingUp size={24} />
          Vulnerability Trends
        </h2>
        
        <button className="btn btn-secondary" onClick={fetchTrends} disabled={loading}>
          <RefreshCw size={16} style={{ marginRight: '8px' }} />
          Refresh
        </button>
      </div>

      {loading ? (
        <div style={{ textAlign: 'center', padding: '40px' }}>
          <div className="spinner"></div>
          <p style={{ marginTop: '16px', color: '#6c757d' }}>Loading trends...</p>
        </div>
      ) : trendsData.length === 0 ? (
        <div style={{ textAlign: 'center', padding: '40px', color: '#6c757d' }}>
          <TrendingUp size={48} style={{ marginBottom: '16px', opacity: 0.5 }} />
          <p>No trend data available. Run some scans to see analytics!</p>
        </div>
      ) : (
        <div>
          <div style={{ height: '400px', marginBottom: '24px' }}>
            <Line data={chartData} options={chartOptions} />
          </div>
          
          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '16px' }}>
            <div style={{ 
              padding: '16px', 
              backgroundColor: '#fee2e2', 
              borderRadius: '8px',
              textAlign: 'center'
            }}>
              <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#dc2626' }}>
                {trendsData.reduce((sum, item) => sum + item.high, 0)}
              </div>
              <div style={{ fontSize: '14px', color: '#7f1d1d' }}>Total High Severity</div>
            </div>
            
            <div style={{ 
              padding: '16px', 
              backgroundColor: '#fed7aa', 
              borderRadius: '8px',
              textAlign: 'center'
            }}>
              <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#ea580c' }}>
                {trendsData.reduce((sum, item) => sum + item.medium, 0)}
              </div>
              <div style={{ fontSize: '14px', color: '#9a3412' }}>Total Medium Severity</div>
            </div>
            
            <div style={{ 
              padding: '16px', 
              backgroundColor: '#dcfce7', 
              borderRadius: '8px',
              textAlign: 'center'
            }}>
              <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#16a34a' }}>
                {trendsData.reduce((sum, item) => sum + item.low, 0)}
              </div>
              <div style={{ fontSize: '14px', color: '#14532d' }}>Total Low Severity</div>
            </div>
            
            <div style={{ 
              padding: '16px', 
              backgroundColor: '#f0f9ff', 
              borderRadius: '8px',
              textAlign: 'center'
            }}>
              <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#0369a1' }}>
                {trendsData.length}
              </div>
              <div style={{ fontSize: '14px', color: '#0c4a6e' }}>Recent Scans</div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default VulnerabilityTrends;